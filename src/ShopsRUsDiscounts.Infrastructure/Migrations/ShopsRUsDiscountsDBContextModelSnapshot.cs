// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopsRUsDiscounts.Infrastructure.Context;

#nullable disable

namespace ShopsRUsDiscounts.Infrastructure.Migrations
{
    [DbContext(typeof(ShopsRUsDiscountsDBContext))]
    partial class ShopsRUsDiscountsDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopsRUsDiscounts.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreaatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerType")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5abae814-6113-417b-aec1-8afeb8dc01e1"),
                            CreaatedDate = new DateTime(2023, 9, 14, 13, 41, 4, 912, DateTimeKind.Local).AddTicks(5090),
                            CustomerType = 0,
                            Email = "a@a.com",
                            FullName = "mustafa eren",
                            IsActive = true,
                            IsDelete = false
                        },
                        new
                        {
                            Id = new Guid("af60dea2-0ee8-4be6-93df-7e034052a108"),
                            CreaatedDate = new DateTime(2023, 9, 14, 13, 41, 4, 912, DateTimeKind.Local).AddTicks(5100),
                            CustomerType = 2,
                            Email = "b@a.com",
                            FullName = "ali eren",
                            IsActive = true,
                            IsDelete = false
                        },
                        new
                        {
                            Id = new Guid("07f93dac-1223-43e1-a8d2-3d2f67340b85"),
                            CreaatedDate = new DateTime(2023, 9, 14, 13, 41, 4, 912, DateTimeKind.Local).AddTicks(5120),
                            CustomerType = 1,
                            Email = "b@a.com",
                            FullName = "veli eren",
                            IsActive = true,
                            IsDelete = false
                        },
                        new
                        {
                            Id = new Guid("db94b670-8846-439c-b5ba-9cad90e66ffd"),
                            CreaatedDate = new DateTime(2023, 9, 14, 13, 41, 4, 912, DateTimeKind.Local).AddTicks(5130),
                            CustomerType = 3,
                            Email = "b@a.com",
                            FullName = "aayşe eren",
                            IsActive = true,
                            IsDelete = false
                        });
                });

            modelBuilder.Entity("ShopsRUsDiscounts.Domain.Entities.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreaatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerType")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscountRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerType")
                        .IsUnique();

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e3edac69-1cb3-4c11-aad6-5feb903793aa"),
                            CreaatedDate = new DateTime(2023, 9, 14, 13, 41, 4, 912, DateTimeKind.Local).AddTicks(5210),
                            CustomerType = 0,
                            DiscountRatio = 0m,
                            IsActive = true,
                            IsDelete = false
                        },
                        new
                        {
                            Id = new Guid("ea695148-6b68-46c2-9697-ccf8f54a1bd2"),
                            CreaatedDate = new DateTime(2023, 9, 14, 13, 41, 4, 912, DateTimeKind.Local).AddTicks(5220),
                            CustomerType = 2,
                            DiscountRatio = 10m,
                            IsActive = true,
                            IsDelete = false
                        },
                        new
                        {
                            Id = new Guid("6e772212-bec4-4f5b-a47f-4b66ee1967d4"),
                            CreaatedDate = new DateTime(2023, 9, 14, 13, 41, 4, 912, DateTimeKind.Local).AddTicks(5240),
                            CustomerType = 1,
                            DiscountRatio = 30m,
                            IsActive = true,
                            IsDelete = false
                        },
                        new
                        {
                            Id = new Guid("90ded744-5c1b-469f-b7da-93eea712e8d2"),
                            CreaatedDate = new DateTime(2023, 9, 14, 13, 41, 4, 912, DateTimeKind.Local).AddTicks(5250),
                            CustomerType = 3,
                            DiscountRatio = 5m,
                            IsActive = true,
                            IsDelete = false
                        });
                });

            modelBuilder.Entity("ShopsRUsDiscounts.Domain.Entities.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreaatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InvoiceNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceNumber"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("ShopsRUsDiscounts.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreaatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DicountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ShopsRUsDiscounts.Domain.Entities.Invoice", b =>
                {
                    b.HasOne("ShopsRUsDiscounts.Domain.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ShopsRUsDiscounts.Domain.Entities.Order", b =>
                {
                    b.HasOne("ShopsRUsDiscounts.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
